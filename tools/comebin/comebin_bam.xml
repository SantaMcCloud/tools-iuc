<tool id="comebin_bam" name="Generate bam file for COMEBin" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX_SCRIPT@" profile="@PROFILE@">
    <description>Generate bam file for COMEBin</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code">
        <![CDATA[

            mkdir 'outputs' &&

            #if $assembly.ext.endswith('.gz'):
                ln -s '$assembly' 'assembly.fasta.gz' &&
            #else:
                ln -s '$assembly' 'assembly.fasta' &&
            #end if

            #if $read_typ.is_select == "normal":
                #if $input_typ.is_select == "paired":
                    #if $paired_reads.forward.ext.endswith('.gz'):
                        ln -s '$paired_reads.forward' 'read_1.fastq.gz' &&
                        ln -s '$paired_reads.reverse' 'read_2.fastq.gz' &&
                    #else:
                        ln -s '$paired_reads.forward' 'read_1.fastq' &&
                        ln -s '$paired_reads.reverse' 'read_2.fastq' &&
                    #end if
                #else:
                    #if $forward.ext.endswith('.gz'):
                        ln -s '$forward' 'read_1.fastq.gz' &&
                        ln -s '$reverse' 'read_2.fastq.gz' &&
                    #else:
                        ln -s '$forward' 'read_1.fastq' &&
                        ln -s '$reverse' 'read_2.fastq' &&
                    #end if
                #end if
            #else if $read_typ.is_select == "single":
                #if $single_reads.ext.endswith('.gz'):
                    ln -s '$single_reads' 'read.fastq.gz' &&
                #else:
                    ln -s '$single_reads' 'read.fastq' &&
                #end if
            #else:
                #if $interleaved_reads.ext.endswith('.gz'):
                    ln -s '$interleaved_reads' 'read.fastq.gz' &&
                #else:
                    ln -s '$interleaved_reads' 'read.fastq' &&
                #end if
            #end if

            gen_cov_file.sh
            #if $assembly.ext.endswith('.gz'):
                -a 'assembly.fasta.gz'
            #else:
                -a 'assembly.fasta'
            #end if
            -o 'outputs'
            -t \${GALAXY_SLOTS:-1}
            -l ${length}
            #if $read_typ.is_select == "normal":
                #if $input_typ.is_select == "paired":
                    #if $paired_reads.forward.ext.endswith('.gz'):
                        'read_1.fastq.gz'
                        'read_2.fastq.gz'
                    #else:
                        'read_1.fastq'
                        'read_2.fastq'
                    #end if
                #else:
                    #if $forward.ext.endswith('.gz'):
                        'read_1.fastq.gz'
                        'read_2.fastq.gz'
                    #else:
                        'read_1.fastq'
                        'read_2.fastq'
                    #end if
                #end if
            #else if $read_typ.is_select == "single":
                #if $single_reads.ext.endswith('.gz'):
                    'read.fastq.gz' --single-end 
                #else:
                    'read.fastq' --single-end 
                #end if
            #else:
                #if $interleaved_reads.ext.endswith('.gz'):
                    'read.fastq.gz' --interleaved
                #else:
                    'read.fastq' --interleaved
                #end if
            #end if



        ]]>
    </command>
    <inputs>
        <param name="assembly" type="data" format="fasta,fasta.gz" label="Input assembly file"/>
        <conditional name="read_typ">
            <param name="is_select" type="select" label="Typ of reads">
                <option value="normal" selected="true">Paired-end non-interleaved</option>
                <option value="single">Single-end</option>
                <option value="interleaved">Paired-end interleaved</option>
            </param>
            <when value="normal">
                <conditional name="input_typ">
                    <param name="is_select" type="select" label="Input typ">
                        <option value="paired">Paired collection</option>
                        <option value="single">No collection</option>
                    </param>
                    <when value="paired">
                        <param name="paired_reads" type="data_collection" collection_type="paired" format="fastq,fastq.gz" label="Input paired reads collection"/>
                    </when>
                    <when value="single">
                        <param name="forward" type="data" format="fastq,fastq.gz" label="Input forward reads"/>
                        <param name="reverse" type="data" format="fastq,fastq.gz" label="Input reverse reads"/>
                    </when> 
                </conditional>
            </when>
            <when value="single">
                <param name="single_reads" type="data" format="fastq,fastq.gz" label="Input single-end reads"/>
            </when>
            <when value="interleaved">
                <param name="interleaved_reads" type="data" format="fastq,fastq.gz" label="Input interleaved reads"/> 
            </when> 
        </conditional>
        <param name="length" type="integer" value="1000" label="Set minimum contig length"/>
    </inputs>
    <outputs>
        <data name="bam_file" format="bam" from_work_dir="outputs/*.bam" label="COMEBin bam file"/>
    </outputs>
    <tests>
       <test expect_num_outputs="1">
        <param name="assembly" value="bowtie2-ref.fasta" ftype="fasta"/>
        <conditional name="read_typ">
            <param name="is_select" value="normal"/>
            <conditional name="input_typ">
                <param name="is_select" value="paired"/>
                <param name="paired_reads">
                    <collection type="paired">
                        <element name="forward" value="bowtie2-fq_1.fastq" ftype="fastq"/>
                        <element name="reverse" value="bowtie2-fq_2.fastq" ftype="fastq"/>
                    </collection>
                </param>
            </conditional>
        </conditional>
        <output name="bam_file" ftype="bam" file="bowtie2-fq.bam"/>
       </test> 
       <test expect_num_outputs="1">
        <param name="assembly" value="bowtie2-ref.fasta" ftype="fasta"/>
        <conditional name="read_typ">
            <param name="is_select" value="normal"/>
            <conditional name="input_typ">
                <param name="is_select" value="single"/>
                <param name="forward" value="bowtie2-fq_1.fastq" ftype="fastq"/>
                <param name="reverse" value="bowtie2-fq_2.fastq" ftype="fastq"/>
            </conditional>
        </conditional>
        <output name="bam_file" ftype="bam" file="bowtie2-fq.bam"/>
        </test>
    </tests>
    <help>
        <![CDATA[
        
            This tool is needed to run COMEBin since other bam files might not fit for COMEBin.

            Better run this tool instead of Bowtie2 but only for COMEBin
        
        ]]>
    </help>
    <expand macro="citations"/>
</tool>
